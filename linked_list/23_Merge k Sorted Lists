/*
   Solution for leetcode problem: https://leetcode.com/problems/merge-k-sorted-lists/
*/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */

struct MyCompare {
    bool operator()(ListNode* p, ListNode* q) {
        return (p->val > q->val);
    }    
    
};


class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
     
        if(lists.size() == 0) {
            return NULL;
        }
        
        if(lists.size() == 1) {
            return lists[0];
        }
        
        ListNode* res = NULL;
        ListNode* head = NULL;
        
        priority_queue<ListNode*, vector<ListNode*>, MyCompare> pq;
        
        for(auto i = 0;i < lists.size();i++) {
            if(lists[i]) {
                pq.push(lists[i]);
            }
        }
        
        while(!pq.empty()) {
            ListNode* local = pq.top();
            
            pq.pop();
            
            if(head == NULL) {
                res = local;
                head = res;
            } else {
                res->next = local; 
                res = res->next;
            }
            
            if(local->next) {
              pq.push(local->next);
            }
        }
        
        
        return head;
    }
};
